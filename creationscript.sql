#DROP DATABASE lifttracker;
CREATE DATABASE lifttracker;

#CREATE USER 'appuser'@'localhost' IDENTIFIED BY 'appuser123';
GRANT SELECT, UPDATE, INSERT, DELETE ON lifttracker.* TO 'appuser'@'localhost';

USE lifttracker;

CREATE TABLE user
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	Name varchar(32),
	Password varchar(40) NOT NULL,
	Vital tinyint(1) NOT NULL DEFAULT 0,
	CONSTRAINT USER_PK PRIMARY KEY (Name)
) ENGINE=InnoDB;

INSERT INTO user (Id, Name, Password, Vital)
VALUES
(1, 'root', Sha1('root'), 1),
(2, 'wdgarey', Sha1('Pimp9919'), 0);

CREATE TABLE role
(
  Id int NOT NULL UNIQUE AUTO_INCREMENT,
  Name varchar(32) NOT NULL,
  Vital tinyint(1) NOT NULL DEFAULT 0,
  CONSTRAINT ROLE_PK PRIMARY KEY (Name)
) ENGINE=InnoDB;

INSERT INTO role (Id, Name, Vital)
VALUES
	(1, 'Admin', 1);

CREATE TABLE function
(
  Id int NOT NULL UNIQUE AUTO_INCREMENT,
  Name varchar(32) NOT NULL,
  Vital tinyint(1) NOT NULL DEFAULT 0,
  CONSTRAINT FUNCTION_PK PRIMARY KEY (Name)
) ENGINE=InnoDB;

INSERT INTO function (Id, Name, Vital)
VALUES
	(1, 'UserAdd', 1),
	(2, 'UserEdit', 1),
	(3, 'UserView', 1),
	(4, 'UserDelete', 1),
	(5, 'ManageUsers', 1),
	(6, 'RoleAdd', 1),
	(7, 'RoleEdit', 1),
	(8, 'RoleView', 1),
	(9, 'RoleDelete', 1),
	(10, 'ManageRoles', 1);

CREATE TRIGGER GIVFUNCTOADMIN_TRIG
AFTER INSERT ON function
	FOR EACH ROW
		INSERT INTO rolefunction (RoleId, FunctionId)
		VALUES(1, NEW.Id);

CREATE TABLE userrole
(
  UserId int,
  RoleId int,
  CONSTRAINT USERROLE_PK PRIMARY KEY (UserId, RoleId),
  CONSTRAINT USERROLE_ROLE_FK FOREIGN KEY(RoleId) REFERENCES role(Id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT USERROLE_USER_FK FOREIGN KEY(UserId) REFERENCES user(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

INSERT INTO userrole (UserId, RoleId)
VALUES
	(1, 1),
	(2, 1);

CREATE TABLE rolefunction
(
  RoleId int,
  FunctionId int,
  CONSTRAINT ROLEFUNCTION_PK PRIMARY KEY (RoleId, FunctionId),
  CONSTRAINT ROLEFUNCTION_FUNCTION_FK FOREIGN KEY (FunctionId) REFERENCES function(Id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT ROLEFUNCTION_ROLE_FK FOREIGN KEY (RoleId) REFERENCES role (Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

INSERT INTO rolefunction (RoleId, FunctionId)
VALUES
	(1, 1),
	(1, 2),
	(1, 3),
	(1, 4),
	(1, 5),
	(1, 6),
	(1, 7),
	(1, 8),
	(1, 9),
	(1, 10);

CREATE TABLE profile
(
	UserId int,
	FirstName varchar(40) DEFAULT '',
	LastName varchar(40) DEFAULT '',
	Height numeric(5, 2),
	Weight numeric(5, 2),
	CONSTRAINT PROFILE_PK PRIMARY KEY (UserId),
	CONSTRAINT PROFILE_USER_FK FOREIGN KEY (UserId) REFERENCES user(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE liftgroup
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	UserId int,
	Name varchar(32),
	AutoUpdate tinyint(1) DEFAULT FALSE,
	UpdateDate date,
	UpdateIncrement numeric(4, 2) DEFAULT 0.0,
	CONSTRAINT LIFTGROUP_PK PRIMARY KEY(UserId, Name),
	CONSTRAINT LIFTGROUP_USER_FK FOREIGN KEY(UserId) REFERENCES user(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE lift
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	LiftGroupId int,
	Name varchar(32),	
	TrainingWeight numeric(6, 2) NOT NULL DEFAULT 0.0,
	CONSTRAINT LIFT_PK PRIMARY KEY(LiftGroupId, Name),
	CONSTRAINT LIFT_LIFTGROUP_FK FOREIGN KEY(LiftGroupId) REFERENCES liftgroup(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE personalrecord
(
	Id int AUTO_INCREMENT,
	LiftId int NOT NULL,
	Date Date NOT NULL,
	Weight numeric(6, 2) NOT NULL DEFAULT 0.0,
	Reps int NOT NULL DEFAULT 0,
	CONSTRAINT PERSONALRECORD_PK PRIMARY KEY (Id),
	CONSTRAINT PERSONALRECORD_LIFT_FK FOREIGN KEY(LiftId) REFERENCES lift(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE scheme
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	UserId int,
	Name varchar(32),	
	CONSTRAINT SCHEME_PK PRIMARY KEY(UserId, Name),
	CONSTRAINT SCHEME_USER_FK FOREIGN KEY(UserId) REFERENCES user(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE week
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	SchemeId int,
	Name varchar(32),	
	CONSTRAINT WEEK_PK PRIMARY KEY(SchemeId, Name),
	CONSTRAINT WEEK_SCHEME_FK FOREIGN KEY(SchemeId) REFERENCES scheme(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE day
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	WeekId int,
	Name varchar(32),
	CONSTRAINT DAY_PK PRIMARY KEY(WeekId, Name),
	CONSTRAINT DAY_WEEK_FK FOREIGN KEY(WeekId) REFERENCES week(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE workout
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	DayId int,
	Name varchar(32),
	CONSTRAINT WORKOUT_PK PRIMARY KEY(DayId, Name),
	CONSTRAINT WORKOUT_DAY_FK FOREIGN KEY(DayId) REFERENCES day(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE exercise
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	WorkoutId int,
	Name varchar(32),
	LiftId int NOT NULL,
	CONSTRAINT EXERCISE_PK PRIMARY KEY(WorkoutId, Name),
	CONSTRAINT EXERCISE_LIFT_FK FOREIGN KEY(LiftId) REFERENCES lift(Id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT EXERCISE_WORKOUT_FK FOREIGN KEY(WorkoutId) REFERENCES workout(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

CREATE TABLE sett
(
	Id int NOT NULL UNIQUE AUTO_INCREMENT,
	ExerciseId int,
	Name varchar(32),
	Percentage numeric(2, 2) NOT NULL,
	Repetitions int NOT NULL,
	CONSTRAINT SETT_PK PRIMARY KEY(ExerciseId, Name),
	CONSTRAINT SETT_EXERCISE_FK FOREIGN KEY(ExerciseId) REFERENCES exercise(Id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;